{"version":3,"sources":["../../src/services/content.service.ts","../../src/services/store.service.ts","../../src/pipes/index.ts","../../node_modules/@angular/core/esm5 lazy","../../src/services/index.ts","../../src lazy","../../src/models/progress.ts","../../src/services/resource.service.ts","../../src/pipes/translate.pipe.ts","../../src/app/main.ts","../../src/pages/index.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/pages/home/home.ts","../../src/services/storage.service.ts","../../src/models/answer.ts","../../src/models/answered-question.ts","../../src/models/checklist-item.ts","../../src/models/content.ts","../../src/models/message.ts","../../src/models/mock-test-result.ts","../../src/models/navigation-item.ts","../../src/models/question.ts","../../src/models/test-result.ts","../../src/services/progress.service.ts","../../src/services/question.service.ts","../../src/services/test.service.ts","../../src/services/rate.service.ts","../../src/services/ad.service.ts","../../src/components/learn/learn.component.ts","../../src/components/navigator/navigator.component.ts","../../src/components/content-progress/content-progress.component.ts","../../src/components/question/question.component.ts","../../src/components/test-result-questions/test-result-questions.component.ts","../../src/components/checklist-item/checklist-item.component.ts","../../src/components/checklist-progress/checklist-progress.component.ts","../../src/components/progressbar/progressbar.component.ts","../../src/components/components.module.ts","../../src/pipes/pipes.module.ts","../../src/pages/content/content.ts","../../src/pages/test/test.ts","../../src/pages/test-result/test-result.ts","../../src/pages/checklist/checklist.ts","../../src/pages/checklist-item-info/checklist-item-info.ts","../../src/pages/about/about.ts","../../src/pages/settings/settings.ts","../../src/pages/mock-test/mock-test.ts","../../src/pages/mock-test-result/mock-test-result.ts","../../src/pages/introduction-slides/introduction-slides.ts","../../src/pages/test-history/test-history.ts","../../src/pages/pages.module.ts","../../src/models/index.ts","../../src/components/index.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable, Inject } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\n\r\nimport {NavigationItem, Content} from '../models';\r\nimport {StorageService} from '../services';\r\n\r\n@Injectable()\r\nexport class ContentService {\r\n\r\n  private contentFilePath = 'content/content.json';\r\n  private contentData = null;\r\n\r\n  constructor(private http: Http) {\r\n  }\r\n\r\n  private getData(): Promise<any> {\r\n    if (this.contentData) {\r\n      return Promise.resolve(this.contentData);\r\n    }\r\n\r\n    return new Promise(resolve => {\r\n      this.http.get(this.contentFilePath)\r\n        .map(res => res.json())\r\n        .subscribe(data => {\r\n          this.contentData = data;\r\n          resolve(this.contentData);\r\n        });\r\n    });\r\n  }\r\n\r\n  // Gets a list of navidation items one level down\r\n  public getNavigationItems(key: string): Promise<NavigationItem[]> {\r\n\r\n    return new Promise(resolve => {\r\n      this.getData().then(data => {\r\n        \r\n        let result = alasql(`\r\n          SELECT DISTINCT Node \r\n          FROM ? \r\n          WHERE Node LIKE \"${key}.%\"`\r\n          , [data]);\r\n\r\n        // Get list of nav items one level down\r\n        let level = key.split('.').length;\r\n        let oneLevelDown = result.map(function(item){\r\n            let name = item.Node.split('.')[level];\r\n            return `${key}.${name}`;\r\n        });\r\n\r\n        // Filter out duplicates\r\n        oneLevelDown = oneLevelDown.filter(function(x, i) {\r\n          return oneLevelDown.indexOf(x) === i;\r\n        });\r\n\r\n        // Map to model\r\n        let models = oneLevelDown.map(function(item){\r\n          return new NavigationItem(item);\r\n        });\r\n        \r\n        resolve(models);\r\n      });\r\n    });\r\n  }\r\n\r\n  // Gets all navigations items below\r\n  public getAllNavigationItems(key: string): Promise<NavigationItem[]> {\r\n\r\n      return new Promise(resolve => {\r\n\r\n        this.getData().then(data => {\r\n        \r\n          let result = alasql(`\r\n            SELECT DISTINCT Node \r\n            FROM ? \r\n            WHERE Node LIKE \"${key}.%\"`\r\n            , [data]);\r\n\r\n          let items = [];\r\n\r\n          // First add top level\r\n          items.push(key);\r\n\r\n          // Get list of nav items\r\n          let level = key.split('.').length;\r\n\r\n          result.forEach(item => {\r\n\r\n            let currentKey = key;\r\n            let split = item.Node.split('.');\r\n\r\n            for (var i = level; i < split.length; i++) {\r\n              currentKey = `${currentKey}.${split[i]}`;\r\n              items.push(currentKey.toString());\r\n            }\r\n            \r\n          });\r\n\r\n          // Filter out duplicates\r\n          items = items.filter(function(x, i) {\r\n            return items.indexOf(x) === i;\r\n          });\r\n\r\n          // Map to model\r\n          let models = items.map(function(item){\r\n            return new NavigationItem(item);\r\n          });\r\n          \r\n          resolve(models);\r\n        });\r\n\r\n        \r\n      });\r\n  }\r\n\r\n  public getContent(key: string): Promise<Content[]> {\r\n\r\n    return new Promise(resolve => {\r\n      this.getData().then(data => {\r\n\r\n          let result = alasql(`\r\n            SELECT Heading, Description, ImageName\r\n            FROM ? \r\n            WHERE Node = \"${key}\"`\r\n            , [data]);\r\n\r\n          // Map to model\r\n          let models = result.map(function(item){\r\n            return new Content(item.Heading, item.Description, item.ImageName);\r\n          });\r\n        \r\n          resolve(models);\r\n\r\n      });\r\n    });\r\n  }\r\n\r\n  public getContentSectionCount(key: string): Promise<number> {\r\n\r\n    return new Promise(resolve => {\r\n      this.getData().then(data => {\r\n\r\n          let result = alasql(`\r\n            SELECT COUNT (DISTINCT Node) AS [count]\r\n            FROM ? \r\n            WHERE Node LIKE \"${key}%\"`\r\n            , [data]);\r\n\r\n          resolve(result[0].count);\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/content.service.ts","import { Injectable } from '@angular/core';\r\n\r\nimport { TestResult, MockTestResult, ChecklistItem, Message } from '../models';\r\nimport {StorageService} from '../services';\r\n\r\n@Injectable()\r\nexport class StoreService {\r\n\r\n    public MOCK_TEST_PASS_TARGET: number = 3;\r\n\r\n    // Init an empty DB if it does not exist by now!\r\n    constructor(private storage: StorageService) {\r\n        this.storage = storage;\r\n    }\r\n\r\n    public insertContentRead(navigationKey: string): Promise<any> {\r\n\r\n        return new Promise(resolve => {\r\n          this.storage.get(StorageService.KEY_CONTENTREAD)\r\n            .then((rawData: string) => {\r\n\r\n                let data = rawData ? JSON.parse(rawData) : [];\r\n\r\n                data.push({ navigationKey: navigationKey, readDate: new Date().getTime() });\r\n\r\n                this.storage.set(StorageService.KEY_CONTENTREAD, JSON.stringify(data)).then((result) => {\r\n                    resolve(result);\r\n                });\r\n          });\r\n\r\n        });\r\n    }\r\n\r\n    public getContentReadCount(navigationKey: string): Promise<number> {\r\n\r\n        return new Promise(resolve => {\r\n\r\n          this.storage.get(StorageService.KEY_CONTENTREAD)\r\n            .then((rawData: string) => {\r\n              let data = rawData ? JSON.parse(rawData) : [];\r\n\r\n              let result = alasql(`\r\n                SELECT COUNT(DISTINCT navigationKey) AS readCount\r\n                FROM ? \r\n                WHERE navigationKey LIKE ('${navigationKey}%')`\r\n                , [data]);\r\n\r\n              resolve(result[0].readCount);\r\n          });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    public insertTestResult(testResult: TestResult): Promise<any> {\r\n\r\n        return new Promise(resolve => {\r\n          this.storage.get(StorageService.KEY_TESTRESULTS)\r\n            .then((rawData: string) => {\r\n\r\n                let data = rawData ? JSON.parse(rawData) : [];\r\n\r\n                data.push({ \r\n                    navigationKey: testResult.navigationKey, \r\n                    totalQuestions: testResult.totalQuestions,\r\n                    correctAnswers: testResult.correctAnswers,\r\n                    testDate: new Date().getTime() \r\n                });\r\n\r\n                this.storage.set(StorageService.KEY_TESTRESULTS, JSON.stringify(data)).then((result) => {\r\n                    resolve(result);\r\n                });\r\n          });\r\n\r\n        });\r\n    }\r\n\r\n    public getLatestTestResult(navigationKey: string): Promise<TestResult> {\r\n\r\n        return new Promise(resolve => {\r\n\r\n          this.storage.get(StorageService.KEY_TESTRESULTS)\r\n            .then((rawData: string) => {\r\n                let data = rawData ? JSON.parse(rawData) : [];\r\n\r\n                let result = alasql(`\r\n                    SELECT TOP 1 navigationKey,totalQuestions,correctAnswers,testDate \r\n                    FROM ?\r\n                    WHERE navigationKey = '${navigationKey}'\r\n                    ORDER BY testDate DESC`\r\n                    , [data]);\r\n\r\n                let testResults: Array<TestResult> = result.map((r) => {\r\n                    return this.mapTestResults(r);\r\n                });\r\n                \r\n                resolve(testResults.length > 0 ? testResults[0] : null);\r\n          });\r\n\r\n        });\r\n    }\r\n\r\n    public getTestResults(navigationKey: string): Promise<TestResult[]> {\r\n\r\n        return new Promise(resolve => {\r\n\r\n          this.storage.get(StorageService.KEY_TESTRESULTS)\r\n            .then((rawData: string) => {\r\n                let data = rawData ? JSON.parse(rawData) : [];\r\n\r\n                let result = alasql(`\r\n                    SELECT navigationKey,totalQuestions,correctAnswers,testDate\r\n                    FROM ?\r\n                    WHERE navigationKey = '${navigationKey}'\r\n                    ORDER BY testDate DESC`\r\n                    , [data]);\r\n\r\n                let testResults = result.map((r) => {\r\n                    return this.mapTestResults(r);\r\n                });\r\n                \r\n                resolve(testResults);\r\n          });\r\n\r\n        });\r\n    }\r\n\r\n    private mapTestResults(r: any): TestResult {\r\n        return new TestResult(r.navigationKey, r.totalQuestions, r.correctAnswers, r.testDate);\r\n    }\r\n\r\n    public getTestSectionsPassed(): Promise<Array<string>> {\r\n\r\n        return new Promise(resolve => {\r\n\r\n          this.storage.get(StorageService.KEY_TESTRESULTS)\r\n            .then((rawData: string) => {\r\n                let data = rawData ? JSON.parse(rawData) : [];\r\n\r\n                let result = alasql(`\r\n                    SELECT DISTINCT navigationKey\r\n                    FROM ?\r\n                    WHERE totalQuestions = correctAnswers`\r\n                    , [data]);\r\n\r\n                let keys = result.map((r) => {\r\n                    return r.navigationKey;\r\n                });\r\n                \r\n                resolve(keys);\r\n          });\r\n\r\n        });\r\n    }\r\n\r\n    public insertMockTestResult(testResult: MockTestResult): Promise<any> {\r\n\r\n        return new Promise(resolve => {\r\n          this.storage.get(StorageService.KEY_MOCKTESTRESULTS)\r\n            .then((rawData: string) => {\r\n\r\n                let data = rawData ? JSON.parse(rawData) : [];\r\n\r\n                data.push({ \r\n                    sectionAPassed: testResult.sectionAPassed(), \r\n                    sectionBPassed: testResult.sectionBPassed(),\r\n                    sectionCPassed: testResult.sectionCPassed(),\r\n                    testDate: new Date().getTime() \r\n                });\r\n\r\n                this.storage.set(StorageService.KEY_MOCKTESTRESULTS, JSON.stringify(data)).then((result) => {\r\n                    resolve(result);\r\n                });\r\n          });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    public getMockTestsPassed(): Promise<number> {\r\n\r\n        return new Promise(resolve => {\r\n\r\n          this.storage.get(StorageService.KEY_MOCKTESTRESULTS)\r\n            .then((rawData: string) => {\r\n                let data = rawData ? JSON.parse(rawData) : [];\r\n\r\n                let result = alasql(`\r\n                    SELECT COUNT(*) AS mockTestsPassed\r\n                    FROM ?\r\n                    WHERE sectionAPassed = true\r\n                    AND sectionBPassed = true\r\n                    AND sectionCPassed = true`\r\n                    , [data]);\r\n\r\n                resolve(result[0].mockTestsPassed);\r\n          });\r\n\r\n        });\r\n    }\r\n\r\n    public updateChecklistItem(key: string, complete: boolean): Promise<any> {\r\n\r\n        return new Promise(resolve => {\r\n\r\n            this.getChecklistItem(key)\r\n                .then(item => {\r\n\r\n                     this.storage.get(StorageService.KEY_CHECKLIST)\r\n                        .then((rawData: string) => {\r\n\r\n                            let data: Array<any> = rawData ? JSON.parse(rawData) : [];\r\n\r\n                            // Insert\r\n                            if (item == null) {\r\n                                data.push({ key: key, complete: complete});\r\n                            } \r\n                            // Update\r\n                            else {\r\n                                data.forEach((item) => {\r\n                                    if (item.key === key)\r\n                                        item.complete = complete;\r\n                                });\r\n                            }\r\n\r\n                            this.storage.set(StorageService.KEY_CHECKLIST, JSON.stringify(data)).then((result) => {\r\n                                resolve(result);\r\n                            });\r\n\r\n\r\n                        });\r\n                });\r\n        });\r\n    }\r\n\r\n    public getCompleteChecklistItemCount(): Promise<number> {\r\n\r\n         return new Promise(resolve => {\r\n\r\n          this.storage.get(StorageService.KEY_CHECKLIST)\r\n            .then((rawData: string) => {\r\n                let data = rawData ? JSON.parse(rawData) : [];\r\n\r\n                let result = alasql(`\r\n                    SELECT COUNT(*) AS itemCount\r\n                    FROM ?\r\n                    WHERE complete = true`\r\n                    , [data]);\r\n\r\n                resolve(result[0].itemCount);\r\n          });\r\n\r\n        });\r\n    }\r\n\r\n\r\n    public getChecklistItem(key: string): Promise<ChecklistItem> {\r\n\r\n        return new Promise(resolve => {\r\n\r\n          this.storage.get(StorageService.KEY_CHECKLIST)\r\n            .then((rawData: string) => {\r\n                let data = rawData ? JSON.parse(rawData) : [];\r\n\r\n                let result = alasql(`\r\n                    SELECT [key], [complete]\r\n                     FROM ?\r\n                     WHERE [key] = '${key}'`\r\n                    , [data]);\r\n\r\n                let checklistitem = null;\r\n                if (result.length > 0) {\r\n                    let item = result[0];\r\n                    checklistitem = new ChecklistItem(item.key, item.complete);\r\n                }\r\n                \r\n                resolve(checklistitem);\r\n          });\r\n\r\n        });\r\n    }\r\n\r\n    public updateMessage(message: Message): Promise<any> {\r\n\r\n        return new Promise(resolve => {\r\n\r\n            this.getMessageQuery(message.key)\r\n                .then((result: any) => {\r\n                   \r\n                     this.storage.get(StorageService.KEY_MESSAGES)\r\n                        .then((rawData: string) => {\r\n\r\n                            let data: Array<any> = rawData ? JSON.parse(rawData) : [];\r\n\r\n                            // Insert\r\n                            if (result.length === 0) {\r\n                                data.push({ key: message.key, shown: message.shown, showAgain: message.showAgain});\r\n                            } \r\n                            // Update\r\n                            else {\r\n                                data.forEach((item) => {\r\n                                    if (item.key === message.key) {\r\n                                        item.shown = message.shown;\r\n                                        item.showAgain = message.showAgain;\r\n                                    }\r\n                                });\r\n                            }\r\n\r\n                            this.storage.set(StorageService.KEY_MESSAGES, JSON.stringify(data)).then((result) => {\r\n                                resolve(result);\r\n                            });\r\n\r\n                        });\r\n                });\r\n        });\r\n    }\r\n\r\n    public getMessage(key: string): Promise<Message> {\r\n\r\n        return new Promise(resolve => {\r\n\r\n          this.getMessageQuery(key)\r\n            .then((result: any) => {\r\n\r\n                let message = null;\r\n                if (result.length > 0) {\r\n                    let item = result[0];\r\n                    message = new Message(item.key, item.shown, item.showAgain);\r\n                }\r\n                else {\r\n                    // Default\r\n                    message = new Message(key, false, true);\r\n                }\r\n                \r\n                resolve(message);\r\n          });\r\n\r\n        });\r\n    }\r\n\r\n    private getMessageQuery(key: string): Promise<Array<any>> {\r\n\r\n        return new Promise(resolve => {\r\n\r\n          this.storage.get(StorageService.KEY_MESSAGES)\r\n            .then((rawData: string) => {\r\n                let data = rawData ? JSON.parse(rawData) : [];\r\n\r\n                let result = alasql(`\r\n                     SELECT [key], [shown], [showAgain]\r\n                     FROM ?\r\n                     WHERE [key] = '${key}'`\r\n                    , [data]);\r\n\r\n                resolve(result);\r\n          });\r\n\r\n        });\r\n    }\r\n\r\n    public clearTestResults(): Promise<any> {\r\n        return this.storage.remove(StorageService.KEY_TESTRESULTS);\r\n    }\r\n\r\n    public clearContentRead(): Promise<any> {\r\n        return this.storage.remove(StorageService.KEY_CONTENTREAD);\r\n    }\r\n\r\n    // KILLS ALL DATA\r\n    public clearAll(): Promise<any> {\r\n        return this.storage.clear();\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/store.service.ts","export * from './translate.pipe';\r\n\r\nexport * from './pipes.module';\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/index.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 118;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 118\n// module chunks = 0","export * from './storage.service';\r\nexport * from './content.service';\r\nexport * from './progress.service';\r\nexport * from './question.service';\r\nexport * from './resource.service';\r\nexport * from './test.service';\r\nexport * from './store.service';\r\nexport * from './rate.service';\r\nexport * from './ad.service';\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/index.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 159;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 159\n// module chunks = 0","\r\n\r\nexport class Progress {\r\n    \r\n    total: number;\r\n    complete: number;\r\n    \r\n    constructor(total: number, complete: number) {\r\n        this.total = total;\r\n        this.complete = complete;\r\n    }\r\n\r\n    percent(): number {\r\n        return (this.complete / this.total) * 100;\r\n    }\r\n\r\n    isComplete(): boolean {\r\n        return this.complete >= this.total;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/progress.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class ResourceService {\r\n  \r\n  private resourceFilePath = 'content/strings.json';\r\n\r\n  private resourceData = null;\r\n\r\n  constructor(private http: Http) {\r\n  }\r\n\r\n  private getData(): Promise<any> {\r\n    if (this.resourceData) {\r\n      return Promise.resolve(this.resourceData);\r\n    }\r\n\r\n    return new Promise(resolve => {\r\n      this.http.get(this.resourceFilePath)\r\n        .map(res => res.json())\r\n        .subscribe(data => {\r\n          this.resourceData = data;\r\n          resolve(this.resourceData);\r\n        });\r\n    });\r\n  }\r\n\r\n  getResourceIndex(): Promise<any[]> {\r\n\r\n    return new Promise(resolve => {\r\n      this.getData().then(data => {\r\n        \r\n        let result = alasql('SELECT [Name], [Value] FROM ?', [data]);\r\n\r\n        let index = [];\r\n        result.forEach(item => {\r\n            index[item.Name] = item.Value;\r\n        });\r\n\r\n        resolve(index);\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  getResource(key: string): Promise<string> {\r\n\r\n    return new Promise(resolve => {\r\n      this.getData().then(data => {\r\n        \r\n        let result = alasql(`\r\n          SELECT [Name], [Value] \r\n          FROM ?\r\n          WHERE [Name] = \"${key}\"`, [data]);\r\n\r\n        resolve(result[0].Value);\r\n      });\r\n    });\r\n\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/resource.service.ts","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {ResourceService} from '../services/resource.service';\r\n\r\n@Pipe({\r\n    name: 'translate',\r\n    pure: false\r\n})\r\nexport class TranslatePipe implements PipeTransform {\r\n\r\n    private text: string = '';\r\n    private promise: Promise<string>;\r\n\r\n    constructor(private resourceService: ResourceService) {\r\n    }\r\n\r\n    transform(key: string): string {\r\n        if (!this.promise) {\r\n            this.promise = this.resourceService.getResource(key);\r\n            this.promise.then((text: string) => this.text = text);\r\n        }\r\n        return this.text;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/translate.pipe.ts","import 'rxjs/add/operator/map';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","export * from './home/home';\r\nexport * from './content/content';\r\nexport * from './test/test';\r\nexport * from './test-result/test-result';\r\nexport * from './checklist/checklist';\r\nexport * from './checklist-item-info/checklist-item-info';\r\nexport * from './about/about';\r\nexport * from './settings/settings';\r\nexport * from './mock-test/mock-test';\r\nexport * from './mock-test-result/mock-test-result';\r\nexport * from './introduction-slides/introduction-slides';\r\nexport * from './test-history/test-history';\r\n\r\nexport * from './pages.module';\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/index.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { HttpModule } from '@angular/http';\nimport { IonicStorageModule } from '@ionic/storage';\n\nimport { AdMobPro } from '@ionic-native/admob-pro';\nimport { AppRate } from '@ionic-native/app-rate';\nimport { AppVersion } from '@ionic-native/app-version';\n\nimport { L2D3DApp }                                 from './app.component';\n\nimport { PagesModule, HomePage, \n          ContentPage, TestPage, \n          TestResultPage, ChecklistPage,\n          ChecklistItemInfoPage, AboutPage,\n          SettingsPage, MockTestPage,\n          MockTestResultPage, IntroductionSlidesPage,\n          TestHistoryPage }                         from '../pages';\n\nimport { ComponentsModule }                         from '../components';\n\nimport { ContentService, QuestionService, \n          ResourceService, TestService, \n          ProgressService, StoreService, \n          StorageService, RateService,\n          AdService }                               from '../services';\n\nimport { PipesModule }                              from '../pipes';\n\n@NgModule({\n  declarations: [\n    L2D3DApp\n  ],\n  imports: [\n    PagesModule,\n    PipesModule,\n    BrowserModule,\n    HttpModule,\n    IonicModule.forRoot(L2D3DApp),\n    IonicStorageModule.forRoot()\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    L2D3DApp,\n    HomePage,\n    ContentPage,\n    TestPage,\n    TestResultPage,\n    ChecklistPage,\n    ChecklistItemInfoPage, \n    AboutPage,\n    SettingsPage,\n    MockTestPage,\n    MockTestResultPage,\n    IntroductionSlidesPage,\n    TestHistoryPage\n  ],\n  providers: [\n    AdMobPro,\n    AppRate,\n    AppVersion,\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    ContentService,\n    QuestionService,\n    ResourceService,\n    TestService,\n    ProgressService,\n    RateService,    \n    AdService,\n    \n    StorageService,\n    StoreService,\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { App, Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage, TestPage, MockTestPage } from '../pages';\nimport { environment } from '../environments/environment';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class L2D3DApp {\n\n  public rootPage: any;\n\n  constructor(private platform: Platform, \n                private statusBar: StatusBar, \n                private splashScreen: SplashScreen, \n                private app: App) {\n    this.initializeApp();\n  }\n\n  private initializeApp(): void {\n\n    this.platform.ready().then(() => {\n\n      this.rootPage = HomePage;\n\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n\n      this.handlePhysicalBackButton();\n\n      //console.log('production: ' + environment.production);\n    });\n  }\n\n  private handlePhysicalBackButton(): void {\n\n    // Registration of push in Android and Windows Phone\n    this.platform.registerBackButtonAction(() => {\n\n      let nav = this.app.getRootNav();\n      let view = nav.getActive();\n\n      // Handle back on test page\n      if (view.instance instanceof TestPage) {\n        let testPage = view.instance as TestPage;\n        testPage.navigateBack();\n        return;\n      }\n\n      // Handle back on mock test page\n      if (view.instance instanceof MockTestPage) {\n        let testPage = view.instance as MockTestPage;\n        testPage.navigateBack();\n        return;\n      }\n\n      // Default back handler\n      if (nav.canGoBack()) {\n        // Go back if we can\n        this.app.navPop();\n      } else {\n        // Exit from app\n        this.platform.exitApp();\n      }\n    });\n  }\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {NavController, ViewController, PopoverController, MenuController} from 'ionic-angular';\r\nimport { AppRate } from 'ionic-native';\r\n\r\n// Services\r\nimport {ProgressService, StoreService, RateService} from '../../services';\r\nimport {ProgressBarComponent} from '../../components';\r\nimport {ContentPage, ChecklistPage, \r\n        MockTestPage, IntroductionSlidesPage,\r\n        SettingsPage, AboutPage } from '../';\r\n\r\n@Component({\r\n  templateUrl: './home.html'\r\n})\r\nexport class HomePage implements OnInit {\r\n\r\n  hidden: boolean = true;\r\n\r\n  rootNavigationKey: string = 'rootNavigation.learner';\r\n  introductionMessageKey: string = 'IntroductionSlidesShown';\r\n\r\n  @ViewChild('checklistprogressbar') checklistProgressComponent: ProgressBarComponent;\r\n  @ViewChild('contentprogressbar') contentProgressComponent: ProgressBarComponent;\r\n  @ViewChild('mocktestprogressbar') mockTestProgressComponent: ProgressBarComponent;\r\n\r\n  constructor(private navCtrl: NavController,\r\n      private viewCtrl: ViewController,\r\n      private popoverCtrl: PopoverController,\r\n      private progressService: ProgressService,\r\n      private storeService: StoreService,\r\n      private rateService: RateService,\r\n      public menuCtrl: MenuController) {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.viewCtrl.didEnter.subscribe(() => {\r\n\r\n      this.rateService.promptForRating(false);\r\n\r\n      this.progressService.getChecklistProgress().\r\n        then(progress => {\r\n          this.checklistProgressComponent.update(progress.percent());\r\n        }\r\n      );\r\n\r\n      this.progressService.getContentProgress(this.rootNavigationKey).\r\n        then(progress => {\r\n          this.contentProgressComponent.update(progress.percent());\r\n        }\r\n      );\r\n\r\n      this.storeService.getMockTestsPassed().\r\n        then(count => {\r\n\r\n          var mockTestPassTarget = this.storeService.MOCK_TEST_PASS_TARGET;\r\n          \r\n          if (count > mockTestPassTarget)\r\n            count = mockTestPassTarget;\r\n\r\n          let percent = (count / mockTestPassTarget) * 100;\r\n\r\n          this.mockTestProgressComponent.update(percent);\r\n        }\r\n      );\r\n     \r\n\r\n      this.storeService.getMessage(this.introductionMessageKey)\r\n        .then(message => {\r\n          // if (message.showAgain === true) \r\n          //  this.navigateToIntroductionSlides(); \r\n          // else \r\n            this.hidden = false;\r\n        }\r\n      ); \r\n      \r\n    }); \r\n  }\r\n\r\n  openMenu() {\r\n    this.menuCtrl.open();\r\n  }\r\n\r\n  navigateToContent() {\r\n    this.navCtrl.push(ContentPage, {\r\n      navigationKey: 'rootNavigation.learner'\r\n    });\r\n  }\r\n\r\n  navigateToIntroductionSlides() {\r\n    this.navCtrl.push(IntroductionSlidesPage);\r\n  }\r\n\r\n  navigateToMockTest() {\r\n   this.navCtrl.push(MockTestPage);\r\n  }\r\n\r\n  navigateToChecklist() {\r\n    this.navCtrl.push(ChecklistPage);\r\n  }\r\n\r\n  navigateToSettings() {\r\n    this.navCtrl.push(SettingsPage);\r\n  }\r\n\r\n  navigateToAbout() {\r\n    this.navCtrl.push(AboutPage);\r\n  }\r\n\r\n  rateApp() {\r\n    this.rateService.promptForRating(true);\r\n  }\r\n  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","'use strict';\r\nimport { Injectable } from '@angular/core';\r\nimport { Storage } from '@ionic/storage';\r\n\r\n@Injectable()\r\nexport class StorageService {\r\n\r\n  public static KEY_CONTENTREAD: string = 'CONTENT_READ';\r\n  public static KEY_TESTRESULTS: string = 'TEST_RESULTS';\r\n  public static KEY_MOCKTESTRESULTS: string = 'MOCK_TEST_RESULTS';\r\n  public static KEY_CHECKLIST: string = 'CHECKLIST';\r\n  public static KEY_MESSAGES: string = 'MESSAGES';\r\n\r\n  constructor(private storage: Storage) {\r\n  }\r\n\r\n  public get(key: string): Promise<{}> {\r\n    return this.storage.get(key);\r\n  }\r\n\r\n  public set(key: string, value: string): Promise<{}> {\r\n    return this.storage.set(key, value);\r\n  }\r\n\r\n  public remove(key: string): Promise<{}> {\r\n    return this.storage.remove(key);\r\n  }\r\n\r\n  public clear(): Promise<void> {\r\n    return this.storage.clear();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/storage.service.ts","\r\nexport class Answer {\r\n    \r\n    id: string;\r\n    text: string;\r\n    \r\n    constructor(id: string, text: string) {\r\n        this.id = id;\r\n        this.text = text;\r\n    }\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/answer.ts","\r\n\r\nexport class AnsweredQuestion {\r\n    \r\n    questionId: number;\r\n    answerId: string;\r\n    \r\n    constructor(questionId: number, answerId: string) {\r\n        this.questionId = questionId;\r\n        this.answerId = answerId;\r\n    }\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/answered-question.ts","export class ChecklistItem {\r\n    \r\n    key: string;\r\n    complete: boolean;\r\n    \r\n    constructor(key: string, complete: boolean) {\r\n        this.key = key;\r\n        this.complete = complete;\r\n    }\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/checklist-item.ts","\r\nexport class Content {\r\n    \r\n    heading: string;\r\n    text: string;\r\n    image: string;\r\n    \r\n    constructor(heading: string, text: string, image: string) {\r\n        this.heading = heading;\r\n        this.text = text;\r\n        this.image = image;\r\n    }\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/content.ts","export class Message {\r\n    \r\n    key: string;\r\n    shown: boolean;\r\n    showAgain: boolean;\r\n    \r\n    constructor(key: string, shown: boolean, showAgain: boolean) {\r\n        this.key = key;\r\n        this.shown = shown;\r\n        this.showAgain = showAgain;\r\n    }\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/message.ts","\r\n\r\nexport class MockTestResult {\r\n    \r\n    questionCountA: number;\r\n    correntAnswersA: number;\r\n    passCountA: number;\r\n\r\n    questionCountB: number;\r\n    correntAnswersB: number;\r\n    passCountB: number;\r\n\r\n    questionCountC: number;\r\n    correntAnswersC: number;\r\n    passCountC: number;\r\n\r\n    testDate: Date;\r\n    \r\n    constructor(questionCountA: number,\r\n                correntAnswersA: number,\r\n                passCountA: number,\r\n\r\n                questionCountB: number,\r\n                correntAnswersB: number,\r\n                passCountB: number,\r\n\r\n                questionCountC: number,\r\n                correntAnswersC: number,\r\n                passCountC: number,\r\n\r\n                testDate: Date = null) {\r\n        \r\n        this.questionCountA = questionCountA;\r\n        this.correntAnswersA = correntAnswersA;\r\n        this.passCountA = passCountA;\r\n\r\n        this.questionCountB = questionCountB;\r\n        this.correntAnswersB = correntAnswersB;\r\n        this.passCountB = passCountB;\r\n        \r\n        this.questionCountC = questionCountC;\r\n        this.correntAnswersC = correntAnswersC;\r\n        this.passCountC = passCountC;\r\n\r\n        this.testDate = testDate;\r\n     }\r\n\r\n     sectionAPassed(): boolean {\r\n         return this.correntAnswersA >= this.passCountA;\r\n     }\r\n\r\n     sectionBPassed(): boolean {\r\n         return this.correntAnswersB >= this.passCountB;\r\n     }\r\n\r\n     sectionCPassed(): boolean {\r\n         return this.correntAnswersC >= this.passCountC;\r\n     }\r\n\r\n     passed(): boolean {\r\n         return this.sectionAPassed() && this.sectionBPassed() && this.sectionCPassed();\r\n     }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/mock-test-result.ts","\r\nexport class NavigationItem {\r\n    \r\n    key: string;\r\n    \r\n    constructor(key: string) {\r\n        this.key = key;\r\n    }\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/navigation-item.ts","import {Answer} from './answer';\r\n\r\nexport class Question {\r\n    \r\n    id: number;\r\n    answerId: string;\r\n    text: string[];\r\n    answers: Answer[];\r\n    images: string[];\r\n    \r\n    constructor(id: number, answerId: string, text: string[], answers: Answer[], images: string[]) {\r\n        this.id = id;\r\n        this.answerId = answerId;\r\n        this.text = text;\r\n        this.answers = answers;\r\n        this.images = images;\r\n    }\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/question.ts","\r\n\r\nexport class TestResult {\r\n\r\n    navigationKey: string;\r\n\r\n    correctAnswers: number;\r\n    totalQuestions: number;\r\n\r\n    testDate: Date;\r\n    \r\n    constructor(navigationKey: string, totalQuestions: number = 0, correctAnswers: number = 0, testDate: Date = null) {\r\n        this.navigationKey = navigationKey;\r\n        this.totalQuestions = totalQuestions;\r\n        this.correctAnswers = correctAnswers;\r\n        this.testDate = testDate;\r\n     }\r\n\r\n     resultPercent(): number {\r\n         if (this.totalQuestions === 0)\r\n            return 0;\r\n         return Math.floor(this.correctAnswers / this.totalQuestions * 100);\r\n     }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/test-result.ts","import { Injectable, Inject  } from '@angular/core';\r\n\r\n\r\n// Services\r\nimport {StoreService} from './store.service';\r\nimport {ContentService} from './content.service';\r\n\r\n// Models\r\nimport {Progress} from '../models/progress';\r\n\r\n@Injectable()\r\nexport class ProgressService {\r\n\r\n    rootNavigationKey: string = 'rootNavigation.learner';\r\n\r\n    constructor(@Inject(StoreService) private storeService: StoreService,\r\n                    @Inject(ContentService) private contentService: ContentService) {\r\n   \r\n    }\r\n\r\n    getChecklistProgress(): Promise<Progress> {\r\n\r\n        return new Promise(resolve => {\r\n\r\n            let total = 8;\r\n            let complete = 0;\r\n\r\n            // 1. Get Checklist count\r\n            this.storeService.getCompleteChecklistItemCount()\r\n            .then(checklistComplete => {\r\n\r\n                complete += checklistComplete;\r\n\r\n                // 2. Get Content Read count\r\n                this.storeService.getContentReadCount(this.rootNavigationKey)\r\n                .then(readCount => {\r\n                    \r\n                    this.contentService.getContentSectionCount(this.rootNavigationKey)\r\n                    .then(sectionCount => {\r\n\r\n                        complete += (readCount >= sectionCount) ? 1 : 0;\r\n\r\n                        // 3. Get Mock Tests Passed count\r\n                        this.storeService.getMockTestsPassed().\r\n                            then(count => {\r\n\r\n                                complete += (count >= this.storeService.MOCK_TEST_PASS_TARGET) ? 1 : 0;\r\n\r\n                                let progress = new Progress(total, complete);\r\n                                resolve(progress);\r\n                            }\r\n                        );\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    getContentProgress(navigationKey: string): Promise<Progress> {\r\n\r\n        return new Promise(resolve => {\r\n\r\n            this.storeService.getContentReadCount(navigationKey)\r\n            .then(readCount => {\r\n\r\n                this.contentService.getContentSectionCount(navigationKey)\r\n                .then(sectionCount => {\r\n\r\n                    let progress = new Progress(sectionCount, readCount);\r\n                    resolve(progress);\r\n\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/progress.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\n\r\nimport { Question, Answer } from '../models';\r\n\r\n@Injectable()\r\nexport class QuestionService {\r\n\r\n  private questionFilePath = 'content/questions.json';\r\n  private questionData = null;\r\n\r\n  constructor(private http: Http) {\r\n  }\r\n\r\n  private getData(): Promise<any> {\r\n    if (this.questionData) {\r\n      return Promise.resolve(this.questionData);\r\n    }\r\n\r\n    return new Promise(resolve => {\r\n      this.http.get(this.questionFilePath)\r\n        .map(res => res.json())\r\n        .subscribe(data => {\r\n          this.questionData = data;\r\n          resolve(this.questionData);\r\n        });\r\n    });\r\n  }\r\n\r\n  public getQuestionsByKeys(keys: string[], count: number): Promise<Question[]> {\r\n\r\n    return new Promise(resolve => {\r\n      this.getData().then(data => {\r\n\r\n        let whereClause = `WHERE `;\r\n        keys.forEach((key, index) => {\r\n\r\n          if (index !== 0)\r\n            whereClause += ` OR `;\r\n\r\n          whereClause += `navPath LIKE \"${key}%\"`;\r\n        });\r\n\r\n        let result = alasql(`\r\n          SELECT question\r\n          FROM ? \r\n          ${whereClause}`\r\n          , [data]);\r\n\r\n        let models = new Array<Question>();\r\n        result.forEach(item => {\r\n\r\n          if (!Array.isArray(item.question)) {\r\n            models.push(this.mapQuestion(item.question));\r\n            return;\r\n          }\r\n\r\n          item.question.forEach(question => {\r\n            models.push(this.mapQuestion(question));\r\n          });\r\n\r\n        });\r\n\r\n        // Select random questions\r\n        models = this.getRandomQuestions(models, count);\r\n\r\n        resolve(models);\r\n\r\n      });\r\n    });\r\n  }\r\n\r\n  public getQuestions(key: string, count: number): Promise<Question[]> {\r\n    return this.getQuestionsByKeys([key], count);\r\n  }\r\n\r\n\r\n  public hasQuestions(key: string): Promise<boolean> {\r\n    return new Promise(resolve => {\r\n      this.getQuestionsByKeys([key], 1)\r\n      .then(questions => {\r\n        resolve(questions.length > 0);\r\n      });\r\n    });\r\n  }\r\n\r\n  private getRandomQuestions(questions: Question[], max): Question[] {\r\n\r\n    // Shuffle\r\n    questions.sort(() => { return 0.5 - Math.random(); });\r\n\r\n    // Take top\r\n    return questions.slice(0, max);\r\n\r\n  }\r\n\r\n  private mapQuestion(question: any): Question {\r\n\r\n    // Get answers\r\n    let answers = new Array<Answer>();\r\n    question.option.forEach(option => {\r\n      answers.push(new Answer(option.id, option.value));\r\n    });\r\n\r\n    // Get question text\r\n    let text = new Array<string>();\r\n    if (typeof question.text === 'string') {\r\n      text.push(question.text);\r\n    } else {\r\n      question.text.list.forEach(questionText => {\r\n        text.push(questionText);\r\n      });\r\n    }\r\n\r\n    // Get images\r\n    let images = new Array<string>();\r\n    if (question.image)\r\n      images.push(question.image);\r\n    if (question.image2)\r\n      images.push(question.image2);\r\n\r\n    return new Question(parseInt(question.id), question.answer, text, answers, images);\r\n\r\n  }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/question.service.ts","import { Injectable } from '@angular/core';\r\n\r\n// Models\r\nimport {Question, AnsweredQuestion, TestResult, MockTestResult} from '../models';\r\n\r\n\r\n@Injectable()\r\nexport class TestService {\r\n\r\n    markTest(navigationKey: string, questions: Question[], answeredQuestions: AnsweredQuestion[]): TestResult  {\r\n    \r\n        let result = new TestResult(navigationKey, 0, 0);\r\n\r\n        if (questions.length === 0)\r\n            return result;\r\n\r\n        let correctAnswerCount = 0;\r\n\r\n        questions.forEach(question => {\r\n\r\n            let answer = answeredQuestions.find((aq) => {\r\n                return aq.questionId === question.id;\r\n            });\r\n\r\n            if (answer && question.answerId === answer.answerId)\r\n                correctAnswerCount++;\r\n            \r\n        });\r\n\r\n        result.correctAnswers = correctAnswerCount;\r\n        result.totalQuestions = questions.length;\r\n\r\n        return result;\r\n    }\r\n\r\n    markTestMock(questionsA: Question[], answeredQuestionsA: AnsweredQuestion[],\r\n                    questionsB: Question[], answeredQuestionsB: AnsweredQuestion[],\r\n                    questionsC: Question[], answeredQuestionsC: AnsweredQuestion[]): MockTestResult  {\r\n    \r\n        let resultA = this.markTest('mocktestA', questionsA, answeredQuestionsA);\r\n        let resultB = this.markTest('mocktestB', questionsB, answeredQuestionsB);\r\n        let resultC = this.markTest('mocktestC', questionsC, answeredQuestionsC);\r\n\r\n        return new MockTestResult(resultA.totalQuestions,\r\n                                    resultA.correctAnswers,\r\n                                    7,\r\n                                    resultB.totalQuestions,\r\n                                    resultB.correctAnswers,\r\n                                    23,\r\n                                    resultC.totalQuestions,\r\n                                    resultC.correctAnswers,\r\n                                    24);\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/test.service.ts","import { Injectable } from '@angular/core';\r\nimport { AppRate } from '@ionic-native/app-rate';\r\n\r\n\r\n@Injectable()\r\nexport class RateService {\r\n\r\n    constructor(private appRate: AppRate) {\r\n        this.appRate.preferences = {\r\n                storeAppURL: {\r\n                    // ios: '849930087',\r\n                    android: 'market://details?id=mobi.learn2drive3d'\r\n                },\r\n                usesUntilPrompt: 12,\r\n                customLocale: {\r\n                    title: 'Please take a moment to rate our app?',\r\n                    message: 'Ratings help us put food on the table :)',\r\n                    rateButtonLabel: 'Rate app!',\r\n                    laterButtonLabel: 'Maybe later',\r\n                    cancelButtonLabel: 'No thanks'\r\n                }\r\n            };\r\n    }\r\n\r\n    public promptForRating(immediate: boolean) {\r\n        this.appRate.promptForRating(immediate);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/rate.service.ts","import { Injectable } from '@angular/core';\r\nimport { environment } from '../environments/environment';\r\n\r\nimport { AdMobPro } from '@ionic-native/admob-pro';\r\n\r\n@Injectable()\r\nexport class AdService {\r\n\r\n    constructor(private admob: AdMobPro) {\r\n    }\r\n\r\n    public prepareInterstitial() {\r\n\r\n        this.admob.prepareInterstitial({\r\n            adId: 'ca-app-pub-8418396680963201/8587373373', \r\n            autoShow: false\r\n        });\r\n    }\r\n\r\n    public showInterstitial() {\r\n        this.admob.showInterstitial();\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/ad.service.ts","import {Component} from '@angular/core';\r\n\r\n\r\n// Services\r\nimport {ContentService} from '../../services/content.service';\r\nimport {StoreService} from '../../services/store.service';\r\n\r\n// Models\r\nimport {Content} from '../../models/content';\r\n\r\n\r\n@Component({\r\n    selector: 'learn',\r\n    templateUrl: './learn.component.html'\r\n})\r\nexport class LearnComponent {\r\n\r\n    contentItems: Content[] = [];\r\n\r\n    constructor(private contentService: ContentService,\r\n                    private storeService: StoreService) { }\r\n\r\n    load(navigationKey: string) {\r\n         this.contentService\r\n            .getContent(navigationKey)\r\n            .then(items => { \r\n                this.contentItems = items;\r\n                \r\n                if (items.length)\r\n                    this.storeService.insertContentRead(navigationKey);\r\n            });\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/learn/learn.component.ts","import {Component} from '@angular/core';\r\nimport {NavController} from 'ionic-angular';\r\n\r\nimport {ContentService} from '../../services';\r\nimport {NavigationItem} from '../../models';\r\nimport {ContentPage} from '../../pages';\r\nimport {ContentProgressComponent} from '../';\r\n\r\n@Component({\r\n    selector: 'navigator',\r\n    templateUrl: './navigator.component.html'\r\n})\r\nexport class NavigatorComponent {\r\n\r\n    navigationItems: NavigationItem[] = [];\r\n\r\n    constructor(private navCtrl: NavController,\r\n        private contentService: ContentService) { }\r\n\r\n    load(key: string) {\r\n        this.contentService\r\n            .getNavigationItems(key)\r\n            .then(items => { \r\n                this.navigationItems = items;\r\n            });\r\n    }\r\n\r\n    navigateTo(navigationItem: NavigationItem) {\r\n      this.navCtrl.push(ContentPage, {\r\n        navigationKey: navigationItem.key\r\n      });\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/navigator/navigator.component.ts","import {Component, OnInit, Input} from '@angular/core';\r\nimport {NavController} from 'ionic-angular';\r\n\r\n// Services\r\nimport {ProgressService} from '../../services';\r\n\r\n\r\n@Component({\r\n  selector: 'content-progress',\r\n  templateUrl: './content-progress.component.html'\r\n})\r\nexport class ContentProgressComponent implements OnInit {\r\n\r\n  @Input() navigationKey: string = '';\r\n\r\n  progress: string = '';\r\n  complete: boolean = false;\r\n  \r\n  constructor(private navCtrl: NavController,\r\n    private progressService: ProgressService) { \r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadContentProgress();\r\n  }\r\n\r\n  loadContentProgress() {\r\n\r\n    this.progressService.getContentProgress(this.navigationKey)\r\n      .then(progress => {\r\n          this.progress = `${progress.complete}/${progress.total}`;\r\n          this.complete = progress.isComplete();\r\n      });\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/content-progress/content-progress.component.ts","import {Component, Input, Output, EventEmitter} from '@angular/core';\r\n\r\n// Models\r\nimport {Question, Answer, AnsweredQuestion} from '../../models';\r\n\r\n@Component({\r\n    selector: 'question',\r\n    templateUrl: './question.component.html'\r\n})\r\nexport class QuestionComponent {\r\n\r\n  @Input() question: Question;\r\n  @Input() questionNumber: number;\r\n\r\n  @Output() answerChangedEvent: EventEmitter<AnsweredQuestion> = new EventEmitter<AnsweredQuestion>();\r\n\r\n  selectedAnswerId: string = '';\r\n\r\n  constructor() {\r\n  }\r\n\r\n  selectAnswer(answerId: string) {\r\n    this.selectedAnswerId = answerId;\r\n  }\r\n\r\n  answerChanged() {\r\n    if (this.selectedAnswerId === '')\r\n      return;\r\n\r\n    let answeredQuestion = new AnsweredQuestion(this.question.id, this.selectedAnswerId);\r\n\r\n    this.answerChangedEvent.emit(answeredQuestion);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/question/question.component.ts","import {Component, Input} from '@angular/core';\r\n\r\n// Models\r\nimport {Question, Answer, AnsweredQuestion} from '../../models';\r\n\r\n@Component({\r\n    selector: 'test-result-questions',\r\n    templateUrl: './test-result-questions.component.html'\r\n})\r\nexport class TestResultQuestionsComponent {\r\n\r\n  @Input() questions: Question[] = [];\r\n  @Input() answeredQuestions: AnsweredQuestion[] = [];\r\n\r\n  public isQuestionCorrectlyAnswered(question: Question): boolean {\r\n    let userAnswerId = this.getUserAnswer(question.id);\r\n    return question.answerId === userAnswerId;\r\n  }\r\n\r\n  public isCorrectAnswer(question: Question, answer: Answer): boolean {\r\n    return question.answerId === answer.id;\r\n  }\r\n\r\n  public isUsersAnswer(question: Question, answer: Answer): boolean {\r\n    return answer.id === this.getUserAnswer(question.id);\r\n  }\r\n\r\n  getUserAnswer(questionId: number): string {\r\n\r\n    let answeredQuestion = this.answeredQuestions.find((aq) => {\r\n        return aq.questionId === questionId;\r\n    });\r\n\r\n    if (!answeredQuestion)\r\n      return '0';\r\n\r\n    return answeredQuestion.answerId;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/test-result-questions/test-result-questions.component.ts","import {Component, Input, OnInit} from '@angular/core';\r\nimport {NavController} from 'ionic-angular';\r\n\r\n// Services\r\nimport {StoreService} from '../../services';\r\n\r\n// Components\r\nimport {ChecklistItemInfoPage} from '../../pages';\r\n\r\n@Component({\r\n    selector: 'checklist-item',\r\n    templateUrl: './checklist-item.component.html'\r\n})\r\nexport class ChecklistItemComponent implements OnInit {\r\n\r\n    @Input() key: string;\r\n    @Input() heading: string;\r\n    @Input() information: string;\r\n\r\n    complete: boolean = false;\r\n\r\n    constructor(private navCtrl: NavController,\r\n        private storeService: StoreService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.storeService.getChecklistItem(this.key)\r\n        .then((item) => {\r\n            if (item != null)\r\n                this.complete = item.complete;\r\n        });\r\n    }\r\n\r\n    showInformation() {\r\n        this.navCtrl.push(ChecklistItemInfoPage, {\r\n            heading: this.heading,\r\n            information: this.information\r\n      });\r\n    }\r\n\r\n    toggleComplete() {\r\n        this.complete = !this.complete;\r\n        this.storeService.updateChecklistItem(this.key, this.complete);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/checklist-item/checklist-item.component.ts","import {Component, OnInit, Input} from '@angular/core';\r\nimport {NavController} from 'ionic-angular';\r\n\r\n// Services\r\nimport {ProgressService} from '../../services';\r\n\r\n\r\n@Component({\r\n  selector: 'checklist-progress',\r\n  templateUrl: './checklist-progress.component.html'\r\n})\r\nexport class ChecklistProgressComponent implements OnInit {\r\n\r\n  completeCount: number = 0;\r\n  totalCount: number = 8;\r\n  \r\n  constructor(private navCtrl: NavController,\r\n    private progressService: ProgressService) { \r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadChecklistProgress();\r\n  }\r\n\r\n  loadChecklistProgress() {\r\n\r\n    this.progressService.getChecklistProgress()\r\n      .then(progress => {\r\n        this.totalCount = progress.total;\r\n        this.completeCount = progress.complete;\r\n      }\r\n    );\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/checklist-progress/checklist-progress.component.ts","import {Component, OnInit, Input} from '@angular/core';\r\n\r\n\r\n@Component({\r\n    selector: 'progressbar',\r\n    templateUrl: './progressbar.component.html'\r\n})\r\nexport class ProgressBarComponent implements OnInit {\r\n\r\n    @Input() key: string;\r\n\r\n    @Input() colorFrom: string;\r\n    @Input() colorTo: string;\r\n    @Input() outOf: number;\r\n\r\n    private progressBar: any = null;\r\n\r\n    constructor() { \r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n     update(percent: number) {\r\n\r\n        this.initialize();\r\n      \r\n        this.progressBar.animate(percent / 100);\r\n     }\r\n\r\n     private initialize() {\r\n\r\n        if (this.progressBar != null)\r\n            return;\r\n\r\n        let outOf = this.outOf;\r\n\r\n        this.progressBar = new ProgressBar.Circle('#' + this.key, {\r\n            color: this.colorFrom,\r\n            trailColor: '#eee',\r\n            strokeWidth: 6,\r\n            duration: 1400,\r\n            easing: 'easeInOut',\r\n            from: {color: this.colorFrom},\r\n            to: {color: this.colorTo},\r\n            // Set default step function for all animate calls\r\n            step: function(state, circle) {\r\n                \r\n                circle.path.setAttribute('stroke', state.color);\r\n\r\n                let value = Math.round(circle.value() * 100);\r\n                let displayText = '';\r\n\r\n                if (outOf) {\r\n                    // let x = 1 / outOf * 100;\r\n                    let done = Math.round(value / (1 / outOf * 100));\r\n                    displayText = done + '/' + outOf;\r\n                } else {\r\n                    displayText = value + '%';\r\n                }\r\n               \r\n                circle.setText(displayText);\r\n\r\n                circle.text.style.color = state.color;\r\n            }\r\n        });\r\n\r\n        this.progressBar.text.style.fontFamily = '\"Raleway\", Helvetica, sans-serif';\r\n        this.progressBar.text.style.fontSize = '1.2rem';\r\n     }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/progressbar/progressbar.component.ts","import { NgModule }                                     from '@angular/core';\r\nimport { IonicModule }                                  from 'ionic-angular';\r\n\r\nimport { PipesModule }                                  from '../pipes';\r\n\r\nimport { LearnComponent, NavigatorComponent, \r\n          ContentProgressComponent, QuestionComponent,\r\n          TestResultQuestionsComponent, ChecklistItemComponent,\r\n          ChecklistProgressComponent, ProgressBarComponent } from './';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LearnComponent,\r\n    NavigatorComponent,\r\n    ContentProgressComponent,\r\n    QuestionComponent,\r\n    TestResultQuestionsComponent,\r\n    ChecklistItemComponent,\r\n    ChecklistProgressComponent, \r\n    ProgressBarComponent\r\n  ],\r\n  imports: [\r\n    PipesModule,\r\n    IonicModule,\r\n  ],\r\n  exports: [\r\n    LearnComponent,\r\n    NavigatorComponent,\r\n    ContentProgressComponent,\r\n    QuestionComponent,\r\n    TestResultQuestionsComponent,\r\n    ChecklistItemComponent,\r\n    ChecklistProgressComponent, \r\n    ProgressBarComponent\r\n  ],\r\n  entryComponents: [],\r\n  providers: [ ],\r\n})\r\n\r\nexport class ComponentsModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/components.module.ts","import { NgModule }         from '@angular/core';\r\nimport { CommonModule }     from '@angular/common';\r\n\r\nimport { TranslatePipe }    from './translate.pipe';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TranslatePipe\r\n    ],\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    exports: [\r\n        TranslatePipe\r\n    ]\r\n})\r\n\r\nexport class PipesModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/pipes.module.ts","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {NavController, NavParams} from 'ionic-angular';\r\n\r\nimport {ContentService, StoreService, QuestionService} from '../../services';\r\nimport {NavigationItem, Content, TestResult} from '../../models';\r\nimport {LearnComponent, NavigatorComponent} from '../../components';\r\nimport {TestPage, TestHistoryPage} from '../../pages';\r\n\r\n\r\n@Component({\r\n  templateUrl: './content.html'\r\n})\r\nexport class ContentPage implements OnInit {\r\n\r\n  navigationKey: string = '';\r\n  lastTestResult: TestResult = null;\r\n  noTestWrittenForSection: boolean = false;\r\n  sectionHasTestQuestions: boolean = false;\r\n  \r\n  @ViewChild(LearnComponent) learnComponent: LearnComponent;\r\n  @ViewChild(NavigatorComponent) navigatorComponent: NavigatorComponent;\r\n\r\n  constructor(private navCtrl: NavController,\r\n    private navParams: NavParams,\r\n    private contentService: ContentService,\r\n    private storeService: StoreService,\r\n    private questionService: QuestionService) {\r\n\r\n    // Get the supplied navigation key, if not supply use default\r\n    this.navigationKey = navParams.get('navigationKey');\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.navigatorComponent.load(this.navigationKey);\r\n    this.loadLastTestResult();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.learnComponent.load(this.navigationKey);\r\n\r\n    this.questionService.hasQuestions(this.navigationKey)\r\n      .then(hasQuestions => {\r\n        this.sectionHasTestQuestions = hasQuestions;\r\n      }\r\n    );\r\n  }\r\n\r\n  loadLastTestResult() {\r\n    this.storeService.getLatestTestResult(this.navigationKey)\r\n      .then(testResult => {\r\n          this.lastTestResult = testResult;\r\n          this.noTestWrittenForSection = testResult ? false : true;\r\n      });\r\n  }\r\n\r\n  startTest() {\r\n    this.navCtrl.push(TestPage, {\r\n      navigationKey: this.navigationKey\r\n    });\r\n  }\r\n\r\n  navigateToTestHistory() {\r\n    this.navCtrl.push(TestHistoryPage, {\r\n      navigationKey: this.navigationKey\r\n    });\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/content/content.ts","import {Component, OnInit} from '@angular/core';\r\nimport {NavController, ViewController, NavParams, AlertController} from 'ionic-angular';\r\n\r\nimport {QuestionService, TestService, StoreService, ResourceService, AdService} from '../../services';\r\nimport {Question, Answer, AnsweredQuestion, TestResult, Message} from '../../models';\r\nimport {QuestionComponent} from '../../components';\r\nimport {TestResultPage} from '../';\r\n\r\n@Component({\r\n    templateUrl: './test.html'\r\n})\r\nexport class TestPage implements OnInit {\r\n\r\n  navigationKey: string = '';\r\n  questions: Question[] = [];\r\n\r\n  testInformationMessageKey: string = 'TestInformation';\r\n\r\n  // AnsweredQuestion Index\r\n  answeredQuestions: { [id: number]: AnsweredQuestion; } = {};\r\n\r\n  constructor(private navCtrl: NavController,\r\n    private navParams: NavParams,\r\n    private viewCtrl: ViewController,\r\n    private alertCtrl: AlertController,\r\n    private questionService: QuestionService,\r\n    private testService: TestService,\r\n    private storeService: StoreService,\r\n    private resourceService: ResourceService,\r\n    private adService: AdService) { \r\n\r\n      // Get the supplied navigation key\r\n      this.navigationKey = navParams.get('navigationKey');\r\n  }\r\n \r\n  ngOnInit() {\r\n\r\n    this.viewCtrl.showBackButton(false);\r\n\r\n    this.questionService.getQuestions(this.navigationKey, 10)\r\n      .then(questions => {\r\n        this.questions = questions;\r\n      });\r\n\r\n    this.storeService.getMessage(this.testInformationMessageKey)\r\n      .then(message => {\r\n          if (message.showAgain === true) \r\n            this.showTestInformation(message);\r\n      });  \r\n\r\n    this.adService.prepareInterstitial();\r\n    \r\n  }\r\n\r\n  answerChanged(answeredQuestion: AnsweredQuestion) {\r\n    // Update index\r\n    this.answeredQuestions[answeredQuestion.questionId] = answeredQuestion;\r\n  }\r\n\r\n  markTest() {\r\n    \r\n    let answeredQuestions = this.getAnsweredQuestionsList();\r\n    \r\n    if (answeredQuestions.length < this.questions.length) {\r\n      // Show modal\r\n      this.showMarkTestConfirmation();\r\n      return;\r\n    }\r\n\r\n    this.navigateToTestResults();  \r\n  }\r\n\r\n  navigateToTestResults() {\r\n\r\n    this.navCtrl.push(TestResultPage, {\r\n      navigationKey: this.navigationKey,\r\n      questions: this.questions,\r\n      answeredQuestions: this.getAnsweredQuestionsList()\r\n    })\r\n    .then(() => {\r\n        // Remove itself from the nav stack, \r\n        // so that we go dont come back here after results\r\n        let index = this.viewCtrl.index;\r\n        this.navCtrl.remove(index);\r\n    });\r\n\r\n  }\r\n\r\n  showTestInformation(message: Message) {\r\n\r\n    this.resourceService.getResource(this.navigationKey)\r\n    .then(sectionName => {\r\n\r\n      let infoAlert = this.alertCtrl.create({\r\n        title: 'Information',\r\n        message: `This test contains a set of questions <b>randomly</b> drawn from the <b>'${sectionName}'</b> section. \r\n                    <br/><br/>Tests will contain a maximum of 10 questions.`,\r\n        inputs: [\r\n        {\r\n          name: 'show-again',\r\n          label: 'Show this message again?',\r\n          checked: true,\r\n          type: 'checkbox'\r\n        }\r\n        ],\r\n        buttons: [\r\n          {\r\n            text: 'Okay',\r\n            handler: data => {\r\n              let showAgain = data.length === 1;\r\n              message.showAgain = showAgain;\r\n              message.shown = true;\r\n              this.storeService.updateMessage(message);\r\n            }\r\n          }\r\n        ]\r\n      });\r\n\r\n      infoAlert.present();\r\n      \r\n    });\r\n\r\n  }\r\n\r\n  showMarkTestConfirmation() {\r\n\r\n     let confirmAlert = this.alertCtrl.create({\r\n      title: 'Hold up!',\r\n      message: 'Not all questions have been answered, are you sure you want to mark the test?',\r\n      buttons: [\r\n        {\r\n          text: 'No',\r\n          handler: () => { }\r\n        },\r\n        {\r\n          text: 'Yes',\r\n          handler: () => {\r\n            this.navigateToTestResults();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    confirmAlert.present();\r\n  }\r\n\r\n  navigateBack() {\r\n\r\n    let answeredQuestions = this.getAnsweredQuestionsList();\r\n    \r\n    if (answeredQuestions.length > 0) {\r\n      // Show modal\r\n      this.showNavigateBackConfirmation();\r\n      return;\r\n    }\r\n\r\n    this.navCtrl.pop();\r\n  }\r\n\r\n  showNavigateBackConfirmation() {\r\n\r\n     let confirmAlert = this.alertCtrl.create({\r\n      title: 'Hold up!',\r\n      message: 'Are you sure you want to quit writing this test?',\r\n      buttons: [\r\n        {\r\n          text: 'No',\r\n          handler: () => { }\r\n        },\r\n        {\r\n          text: 'Yes',\r\n          handler: () => {\r\n            this.navCtrl.pop();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    confirmAlert.present();\r\n  }\r\n\r\n  getAnsweredQuestionsList(): AnsweredQuestion[] {\r\n\r\n    let answeredQuestions: AnsweredQuestion[] = [];\r\n    for (var questionId in this.answeredQuestions) {\r\n        answeredQuestions.push(this.answeredQuestions[questionId]);\r\n    }\r\n    return answeredQuestions;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/test/test.ts","import {Component, OnInit} from '@angular/core';\r\nimport {NavController, NavParams} from 'ionic-angular';\r\n\r\n// Services\r\nimport {StoreService, AdService, TestService} from '../../services';\r\n\r\n// Components\r\nimport {TestResultQuestionsComponent} from '../../components';\r\n\r\n// Models\r\nimport {Question, Answer, AnsweredQuestion, TestResult} from '../../models';\r\n\r\n@Component({\r\n    templateUrl: './test-result.html'\r\n})\r\nexport class TestResultPage implements OnInit {\r\n\r\n  navigationKey: string = '';\r\n  questions: Question[] = [];\r\n  answeredQuestions: AnsweredQuestion[] = [];\r\n\r\n  resultPercent: number = null;\r\n\r\n  constructor(private navCtrl: NavController,\r\n    private navParams: NavParams,\r\n    private testService: TestService,\r\n    private storeService: StoreService,\r\n    private adService: AdService) { \r\n\r\n      this.navigationKey = navParams.get('navigationKey');\r\n      this.questions = navParams.get('questions');\r\n      this.answeredQuestions = navParams.get('answeredQuestions');\r\n\r\n  }\r\n \r\n  ngOnInit() {\r\n\r\n    let result = this.testService.markTest(this.navigationKey, this.questions, this.answeredQuestions);\r\n    this.resultPercent = result.resultPercent();\r\n\r\n    this.storeService.insertTestResult(result);\r\n\r\n    this.adService.showInterstitial();\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/test-result/test-result.ts","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {AlertController} from 'ionic-angular';\r\n\r\nimport {StoreService, ContentService} from '../../services';\r\nimport {ChecklistItemComponent, ChecklistProgressComponent} from '../../components';\r\n\r\n@Component({\r\n    templateUrl: './checklist.html'\r\n})\r\nexport class ChecklistPage implements OnInit {\r\n\r\n  rootNavigationKey: string = 'rootNavigation.learner';\r\n\r\n  @ViewChild(ChecklistProgressComponent) checklistProgressComponent: ChecklistProgressComponent;\r\n\r\n  // Conent Read\r\n  contentAllRead: boolean = null;\r\n  contentReadCount: number = null;\r\n  contentSectionCount: number = null;\r\n\r\n  // Mock Test\r\n  mockTestsPassed: boolean = false;\r\n\r\n  constructor(private alertCtrl: AlertController,\r\n                private storeService: StoreService,\r\n                private contentService: ContentService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n      this.loadContentRead();\r\n      this.loadMockTestsPassed();\r\n  }\r\n\r\n\r\n  loadContentRead() {\r\n      this.storeService.getContentReadCount(this.rootNavigationKey)\r\n      .then(readCount => {\r\n        \r\n        this.contentService.getContentSectionCount(this.rootNavigationKey)\r\n          .then(sectionCount => {\r\n\r\n              this.contentAllRead = readCount >= sectionCount;\r\n              this.contentReadCount = readCount;\r\n              this.contentSectionCount = sectionCount;\r\n          });\r\n      });\r\n  }\r\n\r\n  loadMockTestsPassed() {\r\n      this.storeService.getMockTestsPassed().\r\n        then(count => {\r\n            this.mockTestsPassed = (count >= this.storeService.MOCK_TEST_PASS_TARGET);\r\n        }\r\n      );\r\n  }\r\n\r\n  toggleContentAllRead() {\r\n       \r\n    if (this.contentAllRead === true)\r\n        return;\r\n\r\n    let infoAlert = this.alertCtrl.create({\r\n        title: 'Information',\r\n        message: 'In order to complete this checklist item you must first read through all the content.',\r\n        buttons: [\r\n          {\r\n            text: 'Okay'\r\n          }\r\n        ]\r\n    });\r\n\r\n    infoAlert.present();\r\n  }\r\n\r\n  toggleMockTestsPassed() {\r\n       \r\n    if (this.mockTestsPassed === true)\r\n        return;\r\n\r\n    let infoAlert = this.alertCtrl.create({\r\n        title: 'Information',\r\n        message: 'In order to complete this checklist item you must first pass the mock test 3 times.',\r\n        buttons: [\r\n          {\r\n            text: 'Okay'\r\n          }\r\n        ]\r\n    });\r\n\r\n    infoAlert.present();\r\n  }\r\n\r\n  checklistChanged() {\r\n    let component = this;\r\n    setTimeout(function() {\r\n        component.checklistProgressComponent.loadChecklistProgress();    \r\n    }, 500);\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/checklist/checklist.ts","import {Component, Input} from '@angular/core';\r\nimport {NavParams} from 'ionic-angular';\r\n\r\n\r\n@Component({\r\n    templateUrl: './checklist-item-info.html'\r\n})\r\nexport class ChecklistItemInfoPage {\r\n\r\n    heading: string;\r\n    information: string;\r\n\r\n    constructor(private navParams: NavParams) {\r\n        this.heading = navParams.get('heading');\r\n        this.information = navParams.get('information');\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/checklist-item-info/checklist-item-info.ts","import {Component, OnInit} from '@angular/core';\r\nimport {Platform} from 'ionic-angular';\r\nimport { AppVersion } from '@ionic-native/app-version';\r\n\r\n@Component({\r\n    providers: [AppVersion],\r\n    templateUrl: './about.html'\r\n})\r\nexport class AboutPage implements OnInit {\r\n\r\n    version: string = '';\r\n\r\n    constructor(private platform: Platform, private appVersion: AppVersion) {\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        if (this.platform.is('cordova')) {\r\n            this.appVersion.getVersionNumber().then((s) => {\r\n                this.version = s;\r\n            });\r\n        }\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/about/about.ts","import {Component} from '@angular/core';\r\nimport {AlertController} from 'ionic-angular';\r\n\r\n// Services\r\nimport {StoreService} from '../../services';\r\n\r\n@Component({\r\n  providers: [StoreService],\r\n  templateUrl: './settings.html'\r\n})\r\nexport class SettingsPage {\r\n\r\n  constructor(private alertCtrl: AlertController,\r\n    private storeService: StoreService) {\r\n  }\r\n\r\n  clearTestResults() {\r\n\r\n    let confirmAlert = this.alertCtrl.create({\r\n      title: 'Warning!',\r\n      message: 'Are you sure you want to clear ALL your test results?',\r\n      buttons: [\r\n        {\r\n          text: 'No',\r\n          handler: () => { }\r\n        },\r\n        {\r\n          text: 'Yes',\r\n          handler: () => {\r\n            this.storeService.clearTestResults();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    confirmAlert.present();\r\n  }\r\n\r\n  clearContentRead() {\r\n\r\n    let confirmAlert = this.alertCtrl.create({\r\n      title: 'Warning!',\r\n      message: 'Are you sure you want to clear ALL your study history?',\r\n      buttons: [\r\n        {\r\n          text: 'No',\r\n          handler: () => { }\r\n        },\r\n        {\r\n          text: 'Yes',\r\n          handler: () => {\r\n            this.storeService.clearContentRead();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    confirmAlert.present();\r\n  }\r\n\r\n  recreateSqliteDb () {\r\n\r\n    let confirmAlert = this.alertCtrl.create({\r\n      title: 'Warning!',\r\n      message: 'Are you sure you want to delete ALL user data?',\r\n      buttons: [\r\n        {\r\n          text: 'No',\r\n          handler: () => { }\r\n        },\r\n        {\r\n          text: 'Yes',\r\n          handler: () => {\r\n            this.storeService.clearAll();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    confirmAlert.present();\r\n\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts","\r\n\r\n// <xsl:variable name=\"numCorrectSectionA\" select=\"count(//testAnswer[responseId=correctResponseId]/questionParentId[substring(., 1, string-length('rootNavigation.learner.vehicleControls'))='rootNavigation.learner.vehicleControls'])\"/>\r\n//   <xsl:apply-templates select=\"//testAnswer[1]\" mode=\"mockTestResult\">\r\n//   <xsl:with-param name=\"heading\" select=\"'SECTION A'\"/>\r\n//   <xsl:with-param name=\"numQuestions\" select=\"8\"/>\r\n//   <xsl:with-param name=\"passMark\" select=\"7\"/>\r\n//   <xsl:with-param name=\"numCorrect\" select=\"$numCorrectSectionA\" />\r\n//   </xsl:apply-templates>\r\n//\r\n// <xsl:variable name=\"numCorrectSectionB\" select=\"count(//testAnswer[responseId=correctResponseId]/questionParentId[substring(., 1, string-length('rootNavigation.learner.rulesOfTheRoad'))='rootNavigation.learner.rulesOfTheRoad'    or     substring(., 1, string-length('rootNavigation.learner.defensiveDriving'))='rootNavigation.learner.defensiveDriving'    or    substring(., 1, string-length('rootNavigation.learner.roadSignals'))='rootNavigation.learner.roadSignals'])\"/>\r\n//   <xsl:apply-templates select=\"//testAnswer[1]\" mode=\"mockTestResult\">\r\n//   <xsl:with-param name=\"heading\" select=\"'SECTION B'\"/>\r\n//   <xsl:with-param name=\"numQuestions\" select=\"28\"/>\r\n//   <xsl:with-param name=\"passMark\" select=\"23\"/>\r\n//   <xsl:with-param name=\"numCorrect\" select=\"$numCorrectSectionB\" />\r\n//   </xsl:apply-templates>\r\n//\r\n// <xsl:variable name=\"numCorrectSectionC\" select=\"count(//testAnswer[responseId=correctResponseId]/questionParentId[substring(., 1, string-length('rootNavigation.learner.signs'))='rootNavigation.learner.signs'    or    substring(., 1, string-length('rootNavigation.learner.roadMarkings'))='rootNavigation.learner.roadMarkings'])\"/>\r\n//   <xsl:apply-templates select=\"//testAnswer[1]\" mode=\"mockTestResult\">\r\n//   <xsl:with-param name=\"heading\" select=\"'SECTION C'\"/>\r\n//   <xsl:with-param name=\"numQuestions\" select=\"28\"/>\r\n//   <xsl:with-param name=\"passMark\" select=\"24\"/>\r\n//   <xsl:with-param name=\"numCorrect\" select=\"$numCorrectSectionC\" />\r\n//   </xsl:apply-templates>\r\n//\r\n// <xsl:variable name=\"count\" select=\"64\"/>\r\n//   <xsl:variable name=\"mark\" select=\"$numCorrectSectionA + $numCorrectSectionB + $numCorrectSectionC\"/>\r\n//   <xsl:variable name=\"average\" select=\"$mark div $count * 100\"/>\r\n//   <xsl:variable name=\"passed\" select=\"$numCorrectSectionA &gt;= 7 and $numCorrectSectionB &gt;= 23 and $numCorrectSectionC &gt;= 24\"/>\r\n\r\n\r\nimport {Component, OnInit} from '@angular/core';\r\nimport {NavController, ViewController, NavParams, AlertController, LoadingController} from 'ionic-angular';\r\n\r\nimport {QuestionService, TestService, AdService} from '../../services';\r\nimport {Question, Answer, AnsweredQuestion, TestResult} from '../../models';\r\nimport {QuestionComponent} from '../../components';\r\nimport {MockTestResultPage} from '../';\r\n\r\n\r\n\r\n@Component({\r\n  templateUrl: './mock-test.html'\r\n})\r\nexport class MockTestPage implements OnInit {\r\n\r\n  questionsA: Question[] = [];\r\n  questionsB: Question[] = [];\r\n  questionsC: Question[] = [];\r\n\r\n  questionCountA: number = 8;\r\n  questionCountB: number = 28;\r\n  questionCountC: number = 28;\r\n\r\n  // AnsweredQuestion Dictionaries\r\n  answeredQuestionsA: { [id: number]: AnsweredQuestion; } = {};\r\n  answeredQuestionsB: { [id: number]: AnsweredQuestion; } = {};\r\n  answeredQuestionsC: { [id: number]: AnsweredQuestion; } = {};\r\n\r\n  constructor(private navCtrl: NavController,\r\n              private viewCtrl: ViewController,\r\n              private alertCtrl: AlertController,\r\n              private loadingCtrl: LoadingController,\r\n              private questionService: QuestionService,\r\n              private testService: TestService,\r\n              private adService: AdService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n      this.viewCtrl.showBackButton(false);\r\n\r\n      this.questionService.getQuestions('rootNavigation.learner.vehicleControls', this.questionCountA)\r\n      .then(questions => {\r\n        this.questionsA = questions;\r\n      });\r\n\r\n      this.questionService.getQuestionsByKeys(\r\n         ['rootNavigation.learner.rulesOfTheRoad', \r\n          'rootNavigation.learner.defensiveDriving', \r\n          'rootNavigation.learner.roadSignals'], this.questionCountB)\r\n      .then(questions => {\r\n        this.questionsB = questions;\r\n      });\r\n\r\n      this.questionService.getQuestionsByKeys(\r\n         ['rootNavigation.learner.signs', \r\n          'rootNavigation.learner.defensiveDriving', \r\n          'rootNavigation.learner.roadMarkings'], this.questionCountC)\r\n      .then(questions => {\r\n        this.questionsC = questions;\r\n      });\r\n\r\n      this.adService.prepareInterstitial();\r\n\r\n  }\r\n\r\n  answerChangedA(answeredQuestion: AnsweredQuestion) {\r\n    this.answeredQuestionsA[answeredQuestion.questionId] = answeredQuestion;\r\n  }\r\n\r\n  answerChangedB(answeredQuestion: AnsweredQuestion) {\r\n    this.answeredQuestionsB[answeredQuestion.questionId] = answeredQuestion;\r\n  }\r\n\r\n  answerChangedC(answeredQuestion: AnsweredQuestion) {\r\n    this.answeredQuestionsC[answeredQuestion.questionId] = answeredQuestion;\r\n  }\r\n\r\n\r\n  markTest() {\r\n\r\n    let totalQuestions = this.questionCountA +\r\n                            this.questionCountB + \r\n                            this.questionCountC;\r\n\r\n    let answerQuestionListA = this.getAnsweredQuestionsList(this.answeredQuestionsA);\r\n    let answerQuestionListB = this.getAnsweredQuestionsList(this.answeredQuestionsB);\r\n    let answerQuestionListC = this.getAnsweredQuestionsList(this.answeredQuestionsC);\r\n\r\n    let totalAnsweredQuestions = answerQuestionListA.length +\r\n                                  answerQuestionListB.length + \r\n                                  answerQuestionListC.length;\r\n\r\n    if (totalAnsweredQuestions < totalQuestions) {\r\n      // Show modal\r\n      this.showMarkTestConfirmation(answerQuestionListA, answerQuestionListB, answerQuestionListC);\r\n      return;\r\n    }\r\n\r\n    this.navigateToTestResults(answerQuestionListA, answerQuestionListB, answerQuestionListC);\r\n  }\r\n\r\n  navigateToTestResults(answerQuestionListA: AnsweredQuestion[], answerQuestionListB: AnsweredQuestion[], answerQuestionListC: AnsweredQuestion[]) {\r\n\r\n    this.navCtrl.push(MockTestResultPage, {\r\n      questionsA: this.questionsA,\r\n      questionsB: this.questionsB,\r\n      questionsC: this.questionsC,\r\n      answerQuestionListA: answerQuestionListA,\r\n      answerQuestionListB: answerQuestionListB,\r\n      answerQuestionListC: answerQuestionListC\r\n    })\r\n      .then(() => {\r\n        // Remove itself from the nav stack,\r\n        // so that we go dont come back here after results\r\n        let index = this.viewCtrl.index;\r\n        this.navCtrl.remove(index);\r\n      });\r\n\r\n  }\r\n\r\n  showMarkTestConfirmation(answerQuestionListA: AnsweredQuestion[], answerQuestionListB: AnsweredQuestion[], answerQuestionListC: AnsweredQuestion[]) {\r\n\r\n    let confirmAlert = this.alertCtrl.create({\r\n      title: 'Hold up!',\r\n      message: 'Not all questions have been answered, are you sure you want to mark the test?',\r\n      buttons: [\r\n        {\r\n          text: 'No',\r\n          handler: () => { }\r\n        },\r\n        {\r\n          text: 'Yes',\r\n          handler: () => {\r\n            this.navigateToTestResults(answerQuestionListA, answerQuestionListB, answerQuestionListC);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    confirmAlert.present();\r\n  }\r\n\r\n  navigateBack() {\r\n\r\n    let answeredQuestions = this.getAnsweredQuestionsList(this.answeredQuestionsA).length\r\n                              + this.getAnsweredQuestionsList(this.answeredQuestionsB).length\r\n                              + this.getAnsweredQuestionsList(this.answeredQuestionsC).length;\r\n    \r\n    if (answeredQuestions > 0) {\r\n      // Show modal\r\n      this.showNavigateBackConfirmation();\r\n      return;\r\n    }\r\n\r\n    this.navCtrl.pop();\r\n  }\r\n\r\n  showNavigateBackConfirmation() {\r\n\r\n     let confirmAlert = this.alertCtrl.create({\r\n      title: 'Hold up!',\r\n      message: 'Are you sure you want to quit writing this test?',\r\n      buttons: [\r\n        {\r\n          text: 'No',\r\n          handler: () => { }\r\n        },\r\n        {\r\n          text: 'Yes',\r\n          handler: () => {\r\n            this.navCtrl.pop();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    confirmAlert.present();\r\n  }\r\n\r\n  getAnsweredQuestionsList(dictionary): AnsweredQuestion[] {\r\n\r\n    let answeredQuestions: AnsweredQuestion[] = [];\r\n    for (var questionId in dictionary) {\r\n      answeredQuestions.push(dictionary[questionId]);\r\n    }\r\n    return answeredQuestions;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/mock-test/mock-test.ts","import {Component, OnInit} from '@angular/core';\r\nimport {NavController, NavParams} from 'ionic-angular';\r\n\r\nimport {TestService, StoreService, AdService} from '../../services';\r\nimport {TestResultQuestionsComponent} from '../../components';\r\nimport {Question, Answer, AnsweredQuestion, MockTestResult} from '../../models';\r\n\r\n@Component({\r\n    templateUrl: './mock-test-result.html'\r\n})\r\nexport class MockTestResultPage implements OnInit {\r\n\r\n  questionsA: Question[] = [];\r\n  questionsB: Question[] = [];\r\n  questionsC: Question[] = [];\r\n\r\n  answeredQuestionsA: AnsweredQuestion[] = [];\r\n  answeredQuestionsB: AnsweredQuestion[] = [];\r\n  answeredQuestionsC: AnsweredQuestion[] = [];\r\n\r\n  testPassed: boolean = null;\r\n\r\n  result: MockTestResult;\r\n\r\n  constructor(private navParams: NavParams,\r\n    private testService: TestService,\r\n    private storeService: StoreService,\r\n    private adService: AdService) { \r\n\r\n      this.questionsA = navParams.get('questionsA');\r\n      this.questionsB = navParams.get('questionsB');\r\n      this.questionsC = navParams.get('questionsC');\r\n\r\n      this.answeredQuestionsA = navParams.get('answerQuestionListA');\r\n      this.answeredQuestionsB = navParams.get('answerQuestionListB');\r\n      this.answeredQuestionsC = navParams.get('answerQuestionListC');\r\n  }\r\n \r\n  ngOnInit() {\r\n\r\n    this.result = this.testService.markTestMock(this.questionsA, this.answeredQuestionsA,\r\n                                                  this.questionsB, this.answeredQuestionsB,\r\n                                                  this.questionsC, this.answeredQuestionsC);\r\n\r\n    this.testPassed = this.result.passed();\r\n\r\n    this.storeService.insertMockTestResult(this.result);\r\n\r\n    this.adService.showInterstitial();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/mock-test-result/mock-test-result.ts","import {Component} from '@angular/core';\r\nimport {NavController} from 'ionic-angular';\r\n\r\nimport {StoreService} from '../../services';\r\nimport {Message} from '../../models';\r\n\r\n@Component({\r\n  templateUrl: './introduction-slides.html'\r\n})\r\nexport class IntroductionSlidesPage {\r\n\r\n    introductionMessageKey: string = 'IntroductionSlidesShown';\r\n\r\n    constructor(private navCtrl: NavController,\r\n                    private storeService: StoreService) { }\r\n\r\n    navigateToHome() {\r\n\r\n        let message = new Message(this.introductionMessageKey, true, false);\r\n\r\n        this.storeService.updateMessage(message)\r\n            .then(() => {\r\n                this.navCtrl.popToRoot();\r\n            }\r\n        ); \r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/introduction-slides/introduction-slides.ts","import {Component, OnInit} from '@angular/core';\r\nimport {NavController, NavParams} from 'ionic-angular';\r\n\r\n\r\nimport {StoreService} from '../../services';\r\nimport {TestResult} from '../../models';\r\n\r\n@Component({\r\n    templateUrl: './test-history.html'\r\n})\r\nexport class TestHistoryPage implements OnInit {\r\n\r\n  navigationKey: string = '';\r\n  testResults: TestResult[] = [];\r\n\r\n  constructor(private navCtrl: NavController,\r\n    private navParams: NavParams,\r\n    private storeService: StoreService) { \r\n\r\n      this.navigationKey = navParams.get('navigationKey');\r\n  }\r\n \r\n  ngOnInit() {\r\n      this.storeService.getTestResults(this.navigationKey)\r\n        .then(testResults => {\r\n            this.testResults = testResults;\r\n        });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/test-history/test-history.ts","import { NgModule }         from '@angular/core';\r\nimport { IonicModule }      from 'ionic-angular';\r\n\r\nimport { PipesModule }      from '../pipes';\r\nimport { ComponentsModule } from '../components';\r\n\r\nimport { HomePage, ContentPage, TestPage, \r\n          TestResultPage, ChecklistPage,\r\n          ChecklistItemInfoPage, AboutPage,\r\n          SettingsPage, MockTestPage,\r\n          MockTestResultPage, IntroductionSlidesPage,\r\n          TestHistoryPage }  from './';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HomePage,\r\n    ContentPage,\r\n    TestPage,\r\n    TestResultPage,\r\n    ChecklistPage,\r\n    ChecklistItemInfoPage,\r\n    AboutPage,\r\n    SettingsPage,\r\n    MockTestPage,\r\n    MockTestResultPage,\r\n    IntroductionSlidesPage,\r\n    TestHistoryPage\r\n  ],\r\n  imports: [ \r\n    IonicModule,\r\n    ComponentsModule,\r\n    PipesModule\r\n  ],\r\n  exports: [\r\n    // HomePage,\r\n  ],\r\n  entryComponents: [],\r\n  providers: [ ],\r\n})\r\n\r\nexport class PagesModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pages.module.ts","\r\nexport * from './answer'\r\nexport * from './answered-question'\r\nexport * from './checklist-item'\r\nexport * from './content'\r\nexport * from './message'\r\nexport * from './mock-test-result'\r\nexport * from './navigation-item'\r\nexport * from './progress'\r\nexport * from './question'\r\nexport * from './test-result'\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/index.ts","export * from './learn/learn.component';\r\nexport * from './navigator/navigator.component';\r\nexport * from './content-progress/content-progress.component';\r\nexport * from './question/question.component';\r\nexport * from './test-result-questions/test-result-questions.component';\r\nexport * from './checklist-item/checklist-item.component';\r\nexport * from './checklist-progress/checklist-progress.component';\r\nexport * from './progressbar/progressbar.component';\r\n\r\nexport * from './components.module';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/index.ts"],"sourceRoot":""}